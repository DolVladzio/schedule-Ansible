---
- name: Debug kubeconfig path
  debug:
    msg: "Kubeconfig is: {{ kubeconfig_path }}"

- name: Get GKE {{ jenkins_cluster_name }}'s credentials
  ansible.builtin.shell: >
    gcloud container clusters get-credentials {{ jenkins_cluster_name }}
    --region {{ jenkins_cluster_region }} --project {{ project_id }}

- name: Add Jenkins Helm repo
  kubernetes.core.helm_repository:
    name: jenkins
    repo_url: "{{ item.repo_url }}"
  loop: "{{ config_data.jenkins }}"

- name: Create Jenkins namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}"
    api_version: v1
    kind: Namespace
    name: "{{ item.jenkins_namespace }}"
    state: present
  loop: "{{ config_data.jenkins }}"

- name: Install Jenkins via Helm
  kubernetes.core.helm:
    kubeconfig: "{{ kubeconfig_path }}"
    name: "{{ item.jenkins_release_name }}"
    chart_ref: "{{ item.jenkins_chart }}"
    namespace: "{{ item.jenkins_namespace }}"
    create_namespace: false
    values:
      controller:
        serviceType: "{{ item.serviceType }}"
        admin:
          username: "{{ item.jenkins_admin_user }}"
          password: "{{ item.jenkins_admin_password }}"

        env:
        - name: GITHUB_AUTH
          valueFrom:
            secretKeyRef:
              name: jenkins-secrets
              key: github_auth

        - name: GITHUB_USER
          valueFrom:
            secretKeyRef:
              name: jenkins-github-secrets
              key: github_user
        
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: jenkins-github-secrets
              key: github_token
        
        installPlugins:
          - job-dsl
          - configuration-as-code
          - credentials
          - plain-credentials
          - credentials-binding
          - kubernetes-credentials-provider
        
        JCasC:
          enabled: true
          configScripts:
            credentials: |
              credentials:
                system:
                  domainCredentials:
                    - credentials:
                        - string:
                            scope: GLOBAL
                            id: project_id
                            secret: "{{ project_id }}"
                            description: "GCP project id"

                        - string:
                            scope: GLOBAL
                            id: repo_name
                            secret: "{{ repo_name }}"
                            description: "GCR repo name"

                        - string:
                            scope: GLOBAL
                            id: gcr_name
                            secret: "{{ gcr_name }}"
                            description: "GCR name"

                        - string:
                            scope: GLOBAL
                            id: github_auth
                            secret: "${GITHUB_AUTH}"
                            description: "GitHub token"

                        - usernamePassword:
                            id: github_access
                            username: "${GITHUB_USER}"
                            password: "${GITHUB_TOKEN}"
                            description: "GitHub Access for private repos"

            welcome-message: |
              jenkins:
                systemMessage: "Welcome to Jenkins by DolVladzio!"

            jobdsl: |
              jobs:
                - script: >
                    {{ lookup('file', '../jcasc_pipelines/pipeline.groovy') | indent(18) }}
  loop: "{{ config_data.jenkins }}"